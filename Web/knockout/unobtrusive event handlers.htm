<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
      <script src="../jquery/jquery-1.8.3.min.js" type="text/javascript"></script>
    <script src="../jquery/jquery.tmpl.js" type="text/javascript"></script>
    <script src="knockout-2.3.0.js" type="text/javascript"></script>
</head>
    <body>
        <ul id="people" data-bind='template: { name: "personTmpl", foreach: people }'>
</ul>
 
<script id="personTmpl" type="text/html">
    <li>
        <a class="remove" href="#"> x </a>
        <span data-bind='text: name'></span>
        <a class="add" href="#"> add child </a>
        <ul data-bind='template: { name: "personTmpl", foreach: children }'></ul>
    </li>
</script>
        <script type="text/javascript">
            var Person = function (name, children) {
                this.name = ko.observable(name);
                
                this.children = ko.observableArray(children || []);
            };
            var PeopleModel = function () {
                this.people = ko.observableArray([new Person("Bob", [new Person("Jan"),new Person("Don", [new Person("Ted"),new Person("Ben", [new Person("Joe", [new Person("Ali"),new Person("Ken")])]),new Person("Doug")])]),new Person("Ann", [new Person("Eve"),new Person("Hal")])]);
                this.addChild = function (name, parentArray) {
                    parentArray.push(new Person(name));
                };
            };
            ko.applyBindings(new PeopleModel());
            //attach event handlers
            $("#people").delegate(".remove", "click", function () {
                //retrieve the context
                var context = ko.contextFor(this),parentArray = context.$parent.people || context.$parent.children;
                //remove the data (context.$data) from the appropriate array on its parent (context.$parent)
                parentArray.remove(context.$data);
                return false;
            });
            $("#people").delegate(".add", "click", function () {
                //retrieve the context
                var context = ko.contextFor(this),childName = context.$data.name() + " child",parentArray = context.$data.people || context.$data.children;
                //add a child to the appropriate parent, calling a method off of the main view model (context.$root)
             
                context.$root.addChild(childName, parentArray);
                return false;
            });
        </script>

    </body>
</html>
